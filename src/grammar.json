{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "supercollider",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_definition"
      }
    },
    "_definition": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "line_comment"
        },
        {
          "type": "SYMBOL",
          "name": "block_comment"
        },
        {
          "type": "SYMBOL",
          "name": "keyword"
        },
        {
          "type": "SYMBOL",
          "name": "class_name"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "symbol"
        },
        {
          "type": "SYMBOL",
          "name": "operator"
        },
        {
          "type": "SYMBOL",
          "name": "punctuation"
        },
        {
          "type": "PATTERN",
          "value": "."
        }
      ]
    },
    "line_comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "//"
          },
          {
            "type": "PATTERN",
            "value": ".*"
          }
        ]
      }
    },
    "block_comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "/*"
          },
          {
            "type": "PATTERN",
            "value": "[^*]*\\*+([^/*][^*]*\\*+)*"
          },
          {
            "type": "STRING",
            "value": "/"
          }
        ]
      }
    },
    "keyword": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "var"
          },
          {
            "type": "STRING",
            "value": "arg"
          },
          {
            "type": "STRING",
            "value": "classvar"
          },
          {
            "type": "STRING",
            "value": "const"
          },
          {
            "type": "STRING",
            "value": "if"
          },
          {
            "type": "STRING",
            "value": "else"
          },
          {
            "type": "STRING",
            "value": "while"
          },
          {
            "type": "STRING",
            "value": "for"
          },
          {
            "type": "STRING",
            "value": "do"
          },
          {
            "type": "STRING",
            "value": "case"
          },
          {
            "type": "STRING",
            "value": "switch"
          },
          {
            "type": "STRING",
            "value": "true"
          },
          {
            "type": "STRING",
            "value": "false"
          },
          {
            "type": "STRING",
            "value": "nil"
          },
          {
            "type": "STRING",
            "value": "inf"
          },
          {
            "type": "STRING",
            "value": "this"
          },
          {
            "type": "STRING",
            "value": "super"
          },
          {
            "type": "STRING",
            "value": "thisFunction"
          },
          {
            "type": "STRING",
            "value": "thisMethod"
          },
          {
            "type": "STRING",
            "value": "thisProcess"
          },
          {
            "type": "STRING",
            "value": "SynthDef"
          },
          {
            "type": "STRING",
            "value": "Pbind"
          },
          {
            "type": "STRING",
            "value": "Pdef"
          },
          {
            "type": "STRING",
            "value": "Tdef"
          },
          {
            "type": "STRING",
            "value": "Routine"
          },
          {
            "type": "STRING",
            "value": "Out"
          },
          {
            "type": "STRING",
            "value": "In"
          },
          {
            "type": "STRING",
            "value": "SinOsc"
          },
          {
            "type": "STRING",
            "value": "Saw"
          },
          {
            "type": "STRING",
            "value": "Pulse"
          },
          {
            "type": "STRING",
            "value": "WhiteNoise"
          },
          {
            "type": "STRING",
            "value": "PinkNoise"
          },
          {
            "type": "STRING",
            "value": "EnvGen"
          },
          {
            "type": "STRING",
            "value": "Env"
          },
          {
            "type": "STRING",
            "value": "ADSR"
          },
          {
            "type": "STRING",
            "value": "Line"
          },
          {
            "type": "STRING",
            "value": "XLine"
          },
          {
            "type": "STRING",
            "value": "Mix"
          },
          {
            "type": "STRING",
            "value": "Pan2"
          },
          {
            "type": "STRING",
            "value": "Out"
          }
        ]
      }
    },
    "class_name": {
      "type": "PATTERN",
      "value": "[A-Z][a-zA-Z0-9_]*"
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-z~][a-zA-Z0-9_]*"
    },
    "number": {
      "type": "PATTERN",
      "value": "\\d+(\\.\\d+)?"
    },
    "string": {
      "type": "PATTERN",
      "value": "\"[^\"]*\""
    },
    "symbol": {
      "type": "PATTERN",
      "value": "\\\\[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "operator": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "+"
          },
          {
            "type": "STRING",
            "value": "-"
          },
          {
            "type": "STRING",
            "value": "*"
          },
          {
            "type": "STRING",
            "value": "/"
          },
          {
            "type": "STRING",
            "value": "%"
          },
          {
            "type": "STRING",
            "value": "**"
          },
          {
            "type": "STRING",
            "value": "=="
          },
          {
            "type": "STRING",
            "value": "!="
          },
          {
            "type": "STRING",
            "value": "<"
          },
          {
            "type": "STRING",
            "value": ">"
          },
          {
            "type": "STRING",
            "value": "<="
          },
          {
            "type": "STRING",
            "value": ">="
          },
          {
            "type": "STRING",
            "value": "="
          },
          {
            "type": "STRING",
            "value": "!"
          },
          {
            "type": "STRING",
            "value": "?"
          },
          {
            "type": "STRING",
            "value": ":"
          },
          {
            "type": "STRING",
            "value": "&&"
          },
          {
            "type": "STRING",
            "value": "||"
          },
          {
            "type": "STRING",
            "value": "++"
          },
          {
            "type": "STRING",
            "value": "--"
          },
          {
            "type": "STRING",
            "value": ".."
          },
          {
            "type": "STRING",
            "value": "..."
          },
          {
            "type": "STRING",
            "value": "|>"
          },
          {
            "type": "STRING",
            "value": "<|"
          },
          {
            "type": "STRING",
            "value": "<<"
          },
          {
            "type": "STRING",
            "value": ">>"
          },
          {
            "type": "STRING",
            "value": "@"
          },
          {
            "type": "STRING",
            "value": "@@"
          },
          {
            "type": "STRING",
            "value": "@|@"
          }
        ]
      }
    },
    "punctuation": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "STRING",
            "value": ")"
          },
          {
            "type": "STRING",
            "value": "["
          },
          {
            "type": "STRING",
            "value": "]"
          },
          {
            "type": "STRING",
            "value": "{"
          },
          {
            "type": "STRING",
            "value": "}"
          },
          {
            "type": "STRING",
            "value": ";"
          },
          {
            "type": "STRING",
            "value": ","
          },
          {
            "type": "STRING",
            "value": "."
          },
          {
            "type": "STRING",
            "value": "|"
          },
          {
            "type": "STRING",
            "value": "~"
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "line_comment"
    },
    {
      "type": "SYMBOL",
      "name": "block_comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}